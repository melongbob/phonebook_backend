{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","value","onChange","PersonForm","props","onSubmit","addPersons","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","handleDelete","name","number","onClick","Persons","persons","map","key","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","content","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","personService","initialPersons","personsToShow","toLowerCase","includes","event","target","preventDefault","personObject","window","confirm","find","returnedPerson","p","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a2ada61.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({filter, handleFilterChange}) => (\r\n    <div>\r\n        filter shown with <input value={filter} onChange={handleFilterChange}/>\r\n    </div>\r\n);\r\n\r\nexport default Filter;","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.addPersons}>\r\n            <div>\r\n                name: <input value={props.newName} onChange={props.handleNameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Person = ({person, handleDelete}) => {\r\n    return (\r\n    <p>\r\n        {person.name} {person.number} \r\n        <button onClick={() => handleDelete(person)}>\r\n            delete\r\n        </button>\r\n    </p>\r\n    );\r\n}\r\n\r\nexport default Person;","import React from 'react';\r\n\r\nimport Person from './Person';\r\n\r\nconst Persons = ({persons, handleDelete}) => (\r\n    <div>\r\n        {persons.map(person => \r\n            <Person key={person.id} person={person} handleDelete={handleDelete}/>\r\n        )}\r\n    </div>\r\n);\r\n\r\nexport default Persons;","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nexport default { getAll, create, update, remove };","import React from 'react';\r\n\r\nconst Notification = ({message}) => {\r\n    if(message === null){\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={message.type}>\r\n            {message.content}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react';\r\n\r\nimport Filter from './components/Filter';\r\nimport PersonForm from './components/PersonForm';\r\nimport Persons from './components/Persons';\r\nimport personService from './services/persons';\r\nimport Notification from './components/Notification';\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [newName, setNewName] = useState('');\r\n    const [newNumber, setNewNumber] = useState('');\r\n    const [filter, setFilter] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    useEffect(() => {\r\n            personService\r\n            .getAll()\r\n            .then(initialPersons => {\r\n                setPersons(initialPersons);\r\n            });\r\n    }, []);\r\n\r\n    const addPersons = (event) => {\r\n        event.preventDefault();\r\n\r\n        const personObject = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n\r\n        if(persons.map(person => person.name).includes(newName)){\r\n            if(window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)){                \r\n                const person = persons.find(person => person.name === newName);\r\n\r\n                personService\r\n                    .update(person.id, personObject)\r\n                    .then(returnedPerson => {\r\n                        setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson));\r\n                        setNewName('');\r\n                        setNewNumber('');\r\n                        setMessage({\r\n                            type: 'notification',\r\n                            content: `Updated ${returnedPerson.name}`\r\n                        });\r\n                        setTimeout(() => {\r\n                            setMessage(null);\r\n                        }, 5000)\r\n                    })\r\n                    .catch(error => {\r\n                        setNewName('');\r\n                        setNewNumber('');\r\n                        setMessage({\r\n                            type: 'error',\r\n                            content: `Person ${person.name} was already removed from the server`\r\n                        });\r\n                        setTimeout(() => {\r\n                            setMessage(null);\r\n                        }, 5000)\r\n                        setPersons(persons.filter(p => p.id !== person.id));\r\n                    });\r\n            }\r\n        } else {\r\n            personService\r\n                .create(personObject)\r\n                .then(returnedPerson => {\r\n                    setPersons(persons.concat(returnedPerson));\r\n                    setNewName('');\r\n                    setNewNumber('');\r\n                    setMessage({\r\n                        type: 'notification',\r\n                        content: `Added ${returnedPerson.name}`\r\n                    });\r\n                    setTimeout(() => {\r\n                        setMessage(null);\r\n                    }, 5000)\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value);\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value);\r\n    }\r\n\r\n    const handleFilterChange = (event) => {\r\n        setFilter(event.target.value);\r\n    }\r\n\r\n    const handleDelete = (person) => {\r\n        if(window.confirm(`Delete ${person.name} ?`))\r\n            personService\r\n                .remove(person.id)\r\n                .then(\r\n                    setPersons(persons.filter(p => p.id !== person.id))\r\n                )\r\n    }\r\n\r\n    const personsToShow = filter === ''\r\n    ? persons\r\n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()));\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={message} />\r\n            <Filter filter={filter} handleFilterChange={handleFilterChange} />\r\n\r\n            <h3>Add a new</h3>\r\n            <PersonForm \r\n                addPersons={addPersons}\r\n                newName={newName}\r\n                handleNameChange={handleNameChange}\r\n                newNumber={newNumber}\r\n                handleNumberChange={handleNumberChange}\r\n            />\r\n\r\n            <h3>Numbers</h3>\r\n            <Persons persons={personsToShow} handleDelete={handleDelete} />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}